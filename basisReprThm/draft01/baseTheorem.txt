SesameStreet++
Most of us think about “whole numbers” not too differently from the way we learned to count by watching Sesame Street - except for the benefit of being able to count MUCH higher than we first learned. The way we’ve trained ourselves, it becomes automatic to think that how we write a number or say a number IS the number.
If I say “I owe you 13 cents” and I give you one dime and three pennies then we would agree those coins are equal to 13 pennies. We identify the symbol “13” very strongly with this particular number - it would be tough to get through life in the modern world without such an automatic process running in our brains. This example highlights what this particular symbol “13” actually means here - one dime () plus three pennies ().
Let’s look at the number 13 in some alternative ways - it’s the number of months in a year plus one month; what I’m suggesting is that there is no need for the symbol “13” in order to think about this particular number of months. Better yet, 13 is this many dots ∘∘∘∘∘∘∘∘∘∘∘∘∘ ; or 13 is the sixth prime number (i.e., <1st: 2>, <2nd: 3>, <3rd: 5>, <4th: 7>, <5th: 11>, <6th: 13>); or perhaps 13 is “the number that follows the 2nd prime-number multiplied by the 1st prime-number squared”, also written as. None of these ways of thinking about the number “13” require that we represent it using the digits 1 and 3 butted up next to each other.
Each number exists independently from any symbol that might represent it. Numbers are an idea - perhaps such a strong idea that the universe wouldn’t exist without it! Anyway, for our purposes whole numbers exist in some abstract realm - Each number is 1 whole unit more than the previous number, starting at nothing, that is, “0”, and jumping to something, that is “1”, then one more, which gets us to 2, then 3, etc. Continuing in this way… then we get them all.
To get the idea of what a whole number really is, try to forget about the symbols we use and picture a pile of jelly-beans. There’s zero jelly-beans, then one, then add another one to get a pile of two, then three, …, then some big pile after we’ve been adding them for a while.  Each successively bigger pile of jelly-beans corresponds with each successive whole number. 
We also want the idea of a “negative number”, which can be thought as “missing something” or “owed something” (in the sense of a debt). Each whole number (except zero) has a corresponding negative number, such that adding the positive number to its corresponding negative number results in a sum of zero. We expand the above set of whole numbers (including zero) to include their negative-counterparts and call this larger set “integers”. We denote the set of integers with this symbol: .  If we only want to talk about positive integers along with zero, we use this symbol: . When we talk about numbers in mathematics we always treat them as belonging to some kind of set (like the integers) in this pure, abstract sort of way.
However... using a “1” followed by a “3” to represent the specific integer “∘∘∘∘∘∘∘∘∘∘∘∘∘” is VERY handy. So we use Arabic Numerals and “base 10” (being the number of fingers most of us have on our two hands) to represent each specific integer. We slap a “-” on the front if we need to talk about a negative integer. This “base 10” way to represent an integer is far superior to the ancient Roman technique.  Try adding two numbers together in ancient Rome, or worse, multiplying or dividing them.  What’s XI times IX? Would you believe me if I told you it’s XCIX? But when we translate to base 10 we can see it’s simply. In fact, the way I worked out my answer above was by doing the math in base 10 and then convert the answer to Roman Numerals - I don’t even know how to multiply using Roman numerals - nor did most Romans!  What a nightmare! Not only that, but I’ll bet that any kid who graduates from Sesame Street can count higher than any Roman could - as Romans only really counted up to 4999 - the number system didn’t really work for higher numbers. 
Here’s how base 10 works. Let’s introduce the symbol “10” to our list of numerals 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 that represent the integers representing no jelly-beans, one-jelly-bean, two-jelly-beans,... up to nine-jelly-beans, and define “10” to be the symbol represents  jelly-beans. The real advantage to our modern system of base 10 comes when we introduce “powers” of this new symbol “10”:
        1        can be written as ,
        10        can be written as ,
        100        can be written as ,
        1000        can be written as ,
        10000        can be written as ,
        ⋯
        10⋯000        can be written as 
The last line,, means there are k  10’s multiplied together - also written as a 1 followed by k  zeros. The above list explicitly shows the cases for k = 0, 1, 2, 3 and 4. Examining the pattern of how the power k relates to how many zeros follow the 1 (eg, 10, 100, 1000, etc.) it makes sense that . There are better (i.e., mathematically rigorous) ways to show that any number raised to the power must be equal to 1, but we’ll save that for another time.
So, what happens when we take one of our powers of 10, let’s say the 4th power, and add it to itself some number of times. Let’s add it to itself 5 times. That is;

Now we can say something meaningful about what it means when we write out an integer in base 10. We’re going to jump into the deep end and make our statement very carefully, in a “mathy” kind of way. Such a careful statement is called a theorem - stay tuned - theorems require proof, which we’re going to supply!


________________


Theorem:  Unique Representation of Integers in Base 10
Suppose  Then every n can be uniquely expressed as follows:

such that  for each ,.
Furthermore except when .
and we represent n thusly:  and call the ’s the “digits” of n.
A difficulty many folks have with math is the notation - it’s kind of a language unto itself - like a computer program is a language. Let’s take our theorem statement by statement and turn it into English.
i)        “Suppose  ”
This means we are going to talk about two numbers that we are labelling n and k. That strange looking ∈ means “is an element of” (or “is a member of”) and is always followed by something that is a “set”.  We talked above about the symbol which we defined as being the set of nonnegative integers.  So, in other words, n can be one of 0,  or 1, or 2, or 3,... or any number - no matter how large -  and the same goes for k.

n and k could be the same number - actually, there’s only one case where they are the same.  Any guesses?                                                            (A: it’s when they’re both zero.)
ii)        “Then every n can be uniquely expressed as follows”
We mean that what we are about to say applies to ALL nonnegative integers and furthermore the statement is going to be unique for each number.
iii)        “”
This is the expression in question. It equates n with a series of multiplications of some numbers times descending powers of 10, and adds them all together. Some important clarification of what those “d” symbols mean follows in the next statement and is critical to the theorem.
iv)        “such that  for each ,”
This means that those d’s are nonnegative integers, and specifically can ONLY take on the values 0, 1, 2, 3, 4, 5, 6, 7, 8 or 9.  It also is very fastidiously pointing out that the little ‘i’ we just introduced in the subscript of the d’s is also an integer and can be as small as zero but only as large as our k - whatever it might be. This is very picky stuff - like a computer program spelling things out very precisely so the computer knows exactly what you mean. Think of the i’s as indices into our array called “d”.
v)        “Furthermore ...”
This is spelling out one more important (fastidious!) detail. We want to make sure that the “most significant d”, that is, our that goes along with the highest poweris not 0, in other words it must be one of 1, 2, 3, 4, 5, 6, 7, 8 or 9. This is necessary so that we can get our uniqueness property, otherwise we could say 13 = 013 = 0000013 which are all the integer 13, so let’s outlaw this uninteresting and annoying possibility.
vi)        “...except when ”
completing that last statement which allows for one exception to the case where the “most significant digit” could be zero, and that’s exactly when the integer n in question IS zero.
vii)        “and we represent n thusly:  and call the ’s the “digits” of n.”
This is introducing what it means to write the number out in base 10; that is, we toss out all the extraneous stuff from our expression in (iii) above, and string all the “digits” one after another, from most significant digit on the left down to least significant digit on the right.
We’re not going to prove our theorem yet. First - let’s look at the integer 46307, for example. We can see that it’s represented by 5 digits and they are , , ,  and , so according to our theorem... 
, 
        4        ×        10000                        40000
+        6        ×        1000                +        6000
+        3        ×        100        =        +        300
+        0        ×        10                +        00
+        7        ×        1                +        7
________________

        =        46307
This is so natural to us, that we barely think about it. This powerful approach has been in use since about 1000 AD, and even though the choice of ten for the base was likely historical (we have 10 fingers) still... 10 is a nice base! It’s fairly easy to remember our times-tables for the single digit numbers (the list isn’t too long). It’s easy to spot even-numbers and multiples of 5 or 10.  Also you can do a nifty trick by adding up the digits of the number to see if it’s divisible by 3 or 9.
However base 10 is not the only base in use these days. Since the introduction of the EDVAC computer, around 1950, there have been many orders of magnitude more calculations done in base 2 (otherwise known as binary) by computers than have EVER been done by people in base 10 for the entirety of human history.
These binary-computer logic gates (the building blocks of the modern computer) can only take one of two states, that is; “off” or “on”. We interpret these two states to represent these two numerals: 0 and 1.  By doing so, in the same way that base 10 uses ten numerals 0, 1, 2, 3, 4, 5, 6, 7, 8, and 9;  we can represent integers in base 2 with just these two numerals.
Let’s build up some numbers by counting up from zero, in base 2. But first let’s think about how we defined 10 to be 9+1, above. The symbol “10” encapsulated the idea of a “carry”. When we added 1 to the number 9, we “carried” 1 over into the tens column and looped our 9 back down to zero - like when the odometer in your car rolls over. So if we have the number 999 and we add 1 to it, the one carries over three times, resulting in 1000.
It’s the same for binary, but the carry happens much more frequently. We’ll get there in a minute, but let’s first consider a fictitious Planet-Nova on which the emergent intelligent species only have 9 fingers. Maybe they have three hands with three fingers each - anyway, they probably use base 9, in which case they’d only use the numerals 0, 1, 2, 3, 4, 5, 6, 7 and 8.  So if they wanted to represent 9 in base-9, they would define their “10” to be 8+1. Similarly on Planet-Ocho, since they only have 8 fingers, they only use numerals 0, 1, 2, 3, 4, 5, 6 and 7 so they’d define their “10” to be 7+1. ...and so on... searching through the universe until we find Planet-Claire, where the poor bastards only have two fingers so they only use the numerals 0 and 1 in which case they’d define their “10” to be 1+1. Here’s how they count on Planet-Claire using base 2:

                base-2        base-10        base-2        base-10
                0        0        (...cont)
                1        1        1001        9
        +        1                1010        10
        =        10        2        1011        11
        +        1                1100        12
        =        11        3        1101        13
        +        1                1110        14
        =        100        4        1111        15
        +        1                10000        16
        =        101        5        10001        17
        +        1                ...
        =        110        6        11111        31
        +        1                100000        32
        =        111        7        ...
        +        1                1000000        64
        =        1000        8        10000000        128
                (cont…)                100000000        256 (...etc.)
Note something interesting in the list above - the powers of two, written in base 2, resemble our powers of 10 in base 10!  That is: , , , , ,, ,,, etc.
Let’s look at an example in base 10 for a minute.  Say we have 50000 + 300.  It’s easy to see the answer, because there is no “conflict” or need to “carry over”, so we can easily state the answer: 50300.
In binary, when we have a similar situation, life is easy.  For example, if we add the numbers 10000 (binary, which is 32 in decimal) and 100 (binary, which is 4 in decimal), then we can easily state the result: 10100 (which is 36 in decimal).  So by carefully selecting a variety of different powers of two (written in binary) and adding them all together we can make another binary number that is any combination of zeros and ones that we want. This insight allows us to restate our theorem for base 10 but rewritten for base 2.
Theorem:  Unique Representation of Integers in Base 2
Suppose, . Then every n can be uniquely expressed as follows:

such that  for each ,.
Furthermore except when .
and we represent n thusly:  and call the ’s the “binary-digits” of n.
Let’s look at the binary number 11010 for example. We can see that it’s represented by 5 binary-digits and they are , , ,  and , so according to our theorem... 
,
        1        ×        10000                        10000         (16)
+        1        ×        1000                +        1000        (8)
+        0        ×        100        =        +        000
+        1        ×        10                +        10        (2)
+        0        ×        1                +        0
________________

        =        11010        (26)
Before we go on, I want to introduce a little notation to help avoid confusion.  How do you know what I’m talking about if I just write “1000”?  Do I mean or ? If there is any possibility for confusion we write the number like this for the base 10 version of 1000, and to mean the binary version. That goes for any other base we might care to delve into like which would mean or .
We can use ANY positive integer greater than 1 for a base. In fact computer graphics artists are known to stumble upon numbers written in hexadecimal, which is base 16 (usually relating to specifying a color-channel).  Base 16 introduces some new symbols to the usual numerals 1, 2, 3, 4, 5, 6, 7, 8 and 9, to represent the ordinary decimal integers 10, 11, 12, 13, 14 and 15, namely: A, B, C, D, E and F.  So if you see this number (80FB)16 then I bet you can figure out that it’s (33019)10 .  If we omit the parentheses and subscript from our number, it means we’re talking about a number in base 10 - our “default” base.  Case in point… the subscripts that we use to denote the base (like the “16” in (80FB)16) ARE written in base 10!  (Otherwise, we’d be in some type of “recursive base hell”!)
We still need to prove our two theorems above. What about proving the “base 9” version of the theorem for the aliens on Planet-Nova, or the “base 8” version for the inhabitants of Planet-Ocho? In fact, since we can use ANY integer greater than or equal to 2 as a base, then let’s restate our theorem for the general case, call it “base b”, where b is any number, two or higher.   If we can prove that theorem, then we’ll automatically get all the individual cases of specific bases essentially for free.
Theorem:  Unique Representation of Integers in an Arbitrary Base
Suppose, s.t. . Then every integer n can be uniquely expressed as follows:

such that  for each ,.
Furthermore except when .
and we represent n thusly: and call the ’s the “digits” of n.
Definition: 
        is called the “most significant digit of n” and 
        is called the “least significant digit of n”.
There are a some subtle changes in the way this theorem is stated, compared to the previous two theorems. The first and most important is that we substituted “b” for “10” and “2” above. Secondly, we did away with the “×” symbol for multiplication. It’s a notational convention that when two “terms” are written next to each other (a “term” being a number, constant, or a variable, e.g., 7 or 13, or n, k or b) that multiplication is the implied operation (E.g., means  andmeans . Naturally, this notational convenience doesn’t work for “terms” that are only numbers like 73 which of course doesn’t mean ). Also, we introduced another common abbreviation in math-speak - the “s.t.” which is just a short form for “such that”.
Before we get into it (“Jeez James, aren’t we into it yet??” :-), let’s quickly discuss what a “proof” is.
A proof is a logically connected series of statements, each of which is either an axiomatically true statement, or a previously proven statement.  (“Axiomatically” refers to simple statements which are taken to be self-evidently true and which do not themselves require proof.) Each statement in a proof connects logically to a prior statement, such that by the end of the series of arguments, the truth of the theorem is indisputable and anyone who comprehends all the statements will agree that the theorem is logically correct and true.
It’s highly desireable to make a proof clear and easy to follow, since it’s really just a form of communication between one person and another - albeit a logical and precise form of communication. One of the beauties of mathematics is that it is a language created to be precise so that there is no room for ambiguity. That is its strength - once you’ve established a theorem as true - it enters the arena of true-statements for ALL people to use in future discussions or proofs of other theorems.
We are going to make use of a powerful 2-step technique to do our proof - namely “induction”:
1. We begin by showing that the theorem is true for the “base case”, when ;
2. We then we assume that the proposed theorem is true for some arbitrary number n, and using this fact (as well as other established properties of numbers, axioms, etc.) we show that the proposed theorem is also true for the next larger number (i.e., ).
If we can do those two things, then we’ve proven it FOR ALL numbers n.
Why would this approach actually prove the theorem for all numbers? Let’s call the thing we’re trying to prove P(n) - meaning “some property of n”.  We established the following in our proof “If P(n) is true, that implies that P(n+1) is true.” We first showed P(1) is true - so that means that P(2) is true, which implies that P(3) is true, which in turn leads to the truth of P(4), etc., over and over so that we eventually reach ANY number.
Some people picture an infinite row of dominoes.  Step 1 is like being able to knock over the first domino.  Step 2 is like the fact that any one domino has the ability to knock over the next.  Once you’ve knocked over the first domino, they all fall!
Ok we’re ready to finally jump in. In order to prove our theorem - first we will prove that there is such a representation for all integers n (existence), after which we will use another technique to prove that each such representation is unique. 
Existence Proof (by induction on n):
Base case:
For clarity, let’s prove bothand. (This is like showing that we can knock over both the 1st and the 2nd dominoes.)
Suppose .  We can choose and . (This is the one exception spelled out in the theorem in which the most significant digit of n is allowed to be zero.) Then,
, showing that we have a valid representation for 0 in base b.
Now suppose .  In this case, we can choose  and . Note that . (The “” symbol is shorthand for “for all”.)  Then,
, showing that we have a valid representation for 1 in base b.


n+1st step:
Assume that n has a valid representation in base b. That is, we assume that n can be written thusly: 

with all the appropriate conditions holding for the values of and b and k; and we will prove thatalso has a valid representation in base b.
We’re going to break this step into two sub-cases.
Case 1) 
This case looks at the situation where the least significant digit of n is strictly-less-than the LARGEST value it can take in base b.
For example, in base 2, can only be 0. In base 5, can be at most 3. In base 10, can be at most 8, etc.
So we can express as follows: 
        =
        = 
        = 
        = 
and since , then , therefore the “least significant digit” of is less than or equal to, which means it is a valid digit in base b.
Since all other terms are unchanged from their representations for n then all the digits of are valid in base b. So in “Case 1” the theorem is true for the integer .
Case 2) 
Now we’ll look at the case when the least significant digit of n is equal to the largest value it can take in base b, that is, .  (Note that between “Case 2” here and “Case 1” above, we’re covering all the possibilities for what can be. )
For example in base 2, ; in base 5, ; in base 10 , etc.
Let’s temporarily introduce a new digit, to our representation of n. The motivation being that in the situation where we’re adding 1 to 999, that we need another “digit” to “carry” the 1 over into so that we can get 1000.
n        =
        =
        =
        =
Also, let be the lowest power of b such that , meaning we write n as follows for some j.
n        =
For example, if , then , since is the lowest power of 10 such that its digit  is less than 9.
Let’s get picky for a minute and think carefully about some boundary conditions, to make sure that our new expression for n is always possible to write this way.
What about when meaning that n is only one digit long? Since we specified that or substituting zero for k then , which means that j must be 1.  Note that we tacked on the extra digit  above, and by substituting we see that . Recall that we are in “Case 2” of our proof, so we know that so it’s true that is the lowest power of b such that .
What about the case when ALL the digits of n, namely are equal to? (For example ) Then , and .
Good! We’re covered in terms of our new expression for n being valid for all possible values of  j  i.e.;. So let’s do some algebraic manipulations on n.
       n        =
        = 
        = 
        = 
        = 
        = 
        = 
Therefore
        =
        = 
Since we picked j such that  , less restate the inequality as therefore meaning the digit  for the base b representation of is valid. All digits and higher remain unchanged from what they were for the base b representation of n, and all digits and lower are 0. Therefore all the digits of the base b representation of  are valid.
To button this up very cleanly we note that if we were dealing with the case that , (eg. n was something like 99999) then we can see that because:
        =
        =
        =
        =
Meaning that we’re actually using the new (k+1)st digit we introduced earlier for our base b representation of , and it’s equal to 1.
In all other cases (i.e.; ) we discard the extra digit  from our expression, and are left with an expression for  that valid for base b.
QED - existence proof
Uniqueness Proof for n:
Let’s assume that our base b representation for n is not unique, then showing that this assumption leads to a logical contradiction with all the rest of Mathematics, then the only possibility remains is that our assumption was wrong, thereby proving uniqueness.
, with 
Let